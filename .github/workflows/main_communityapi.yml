name: Build and deploy Python app to Azure Web App - communityapi

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Change directory to Backend
        run: cd Backend

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: pip install -r requirements.txt

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment
        run: zip -r release.zip . -x "venv/*"

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_76A97D12599441AB8402FA7A1CEB5519 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_CE7776F60B9A4C56902766039F8E058F }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_9ACDD7F43872475BA1C54329514A15CA }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'communityapi'
          slot-name: 'Production'
          package: release.zip

      - name: 'Configure Gunicorn for Azure App Service'
        run: |
          echo "web: gunicorn --bind 0.0.0.0:8000 app:app" > Procfile
          az webapp config appsettings set --resource-group <your_resource_group> --name communityapi --settings WEBSITES_PORT=8000
